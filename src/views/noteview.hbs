<div class="container-fluid">
  <div class="row">
    <div class="col-xs-12">
      {{#if note}}<h3 id="notetitle">{{note.title}}</h3>{{/if}}
      {{#if note}}<p id="notebody">{{note.body}}</p>{{/if}}
      <p>Key: {{notekey}}</p>
    </div>
  </div>
  {{#if notekey}}
    <div class="row"><div class="col-xs-12">
        <div class="btn-group">
          <a
            class="btn btn-outline-dark"
            href="/notes/destroy?key={{notekey}}"
            role="button"
          >Delete</a>
          <a
            class="btn btn-outline-dark"
            href="/notes/edit?key={{notekey}}"
            role="button"
          >Edit</a>
          <button class="btn btn-outline-dark" type="button" data-toggle="modal" data-target="#notes-comment-modal">Comment</button>
        </div>
        <hr>
        <div id="noteMessages" class="row d-flex justify-content-center gap-1 p-1 m-0">
            {{#if messages}}
                {{#each messages}}
                    <div id="note-message-{{id}}" class="col-xs-12 card m-1">
                        <div class="card-body">
                            <h5 class="card-title">{{from}}</h5>
                            <div class="card-text">{{message}}
                                <small style="display: block">{{timestamp}}</small>
                            </div>
                            <button type="button" class="btn btn-primary message-del-button" data-id="{{id}}" data-namespace="{{namespace}}" data-room="{{room}}">Delete</button>
                        </div>
                    </div>
                {{/each}}
            {{/if}}
        </div>
      </div>
    </div>
  {{/if}}

  {{!-- MODAL TO ADD COMMENT --}}
    {{#if notekey}}
        {{#if user}}
            <div class="modal fade" id="notes-comment-modal" tabindex="-1" role="dialog" aria-labelledby="noteCommentModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="noteCommentModalLabel">Leave a Comment</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>  
                        <div class="modal-body">
                            <form id="submit-comment">
                                <input id="comment-from" type="hidden" name="from" value="{{ user.id }}">
                                <input id="comment-namespace" type="hidden" name="namespace" value="/notes">
                                <input id="comment-room" type="hidden" name="room" value="{{notekey}}">
                                <input id="comment-key" type="hidden" name="key" value="{{notekey}}">
                                <fieldset>
                                    <div class="form-group">
                                        <label for="noteCommentTextArea">Your Excellent Thoughts</label>
                                        <textarea id="noteCommentTextArea" name="message" class="form-control" rows="3"></textarea>
                                    </div>
                                    <div class="form-group">
                                        <button id="submitNewComment" type="submit" class="btn btn-primary col-sm-offset-2 col-sm-10">Make Comment</button>
                                    </div>
                                </fieldset>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        {{/if}}
    {{/if}}
</div>

{{> footerjs}}

{{#if notekey}}
<script src="/socket.io/socket.io.js"></script>
<script>
    let socket = io("/notes", {query: {key: '{{notekey}}'}})

    socket.on('notesupdated', note => {
        $('h3#notetitle').empty();
        $('h3#notetitle').text(note.title);
        $('#navbartitle').empty();
        $('#navbartitle').text(note.title);
        $('#notebody').empty();
        $('#notebody').text(note.body);
    });

    socket.on('notedestroyed', key => {
        window.location.href = "/";
    });

    {{#if user}}
        $("#submitNewComment").on("click", function(event){
            socket.emit("createmessage", {
                from: $("#comment-from").val(),
                namespace: $('#comment-namespace').val(),
                room: $('#comment-room').val(),
                key: $('#comment-key').val(),
                message: $('#noteCommentTextArea').val()
            }, 
            response => {
                $('#notes-comment-modal').modal('hide');
                $('#noteCommentTextArea').empty();
            }
            )
        })

        socket.on("newmessage", newMesg => {
            console.log(JSON.stringify(newMesg))
            var msgtxt = [
                '<div id="note-message-%id%" class="col-xs-12 card m-1">',
                '<div class="card-body">',
                '<h5 class="card-title">%from%</h5>',
                '<div class="card-text">%message%',
                '<small style="display: block">%timestamp%</small>',
                '</div>',
                    '<button type="button" class="btn btn-primary message-del-button" ', 'data-id="%id%" data-namespace="%namespace%" ', 'data-room="%room%">', 'Delete',
                    '</button>',
                '</div>',
                '</div>'
            ].join('\n')
                .replace(/%id%/g, newMesg.id)
                .replace(/%from%/g, newMesg.from)
                .replace(/%namespace%/g, newMesg.namespace)
                .replace(/%room%/g, newMesg.room)
                .replace(/%message%/g, newMesg.message)
                .replace(/%timestamp%/g, newMesg.timestamp);
            $('#noteMessages').prepend(msgtxt);
        })

        $("button.message-del-button").on("click", function(event){
            socket.emit("destroymessage", {
                id: $(event.target).data("id"),
                namespace: $(event.target).data('namespace'),
                room: $(event.target).data('room')
            })
        })

        socket.on('messagedestroyed', data => {
            $('#note-message-'+data.id).remove();
        });
    {{/if}}
</script>
{{/if }}